diff '--exclude=.git' '--exclude=.github' --unified --recursive --text mpd.orig/src/client/Response.hxx mpd.new/src/client/Response.hxx
--- mpd.orig/src/client/Response.hxx	2022-09-03 21:56:06.655442911 +0800
+++ mpd.new/src/client/Response.hxx	2022-09-03 21:45:22.931746855 +0800
@@ -82,7 +82,10 @@
 
 	template<typename S, typename... Args>
 	bool Fmt(const S &format_str, Args&&... args) noexcept {
-#if FMT_VERSION >= 70000
+#if FMT_VERSION >= 90000
+		return VFmt(format_str,
+			    fmt::make_format_args(args...));		
+#elif FMT_VERSION >= 70000
 		return VFmt(fmt::to_string_view(format_str),
 			    fmt::make_args_checked<Args...>(format_str,
 							    args...));
@@ -109,7 +112,10 @@
 	template<typename S, typename... Args>
 	void FmtError(enum ack code,
 		      const S &format_str, Args&&... args) noexcept {
-#if FMT_VERSION >= 70000
+#if FMT_VERSION >= 90000
+		return VFmtError(code, format_str,
+				 fmt::make_format_args(args...));
+#elif FMT_VERSION >= 70000
 		return VFmtError(code, fmt::to_string_view(format_str),
 				 fmt::make_args_checked<Args...>(format_str,
 								 args...));
diff '--exclude=.git' '--exclude=.github' --unified --recursive --text mpd.orig/src/decoder/plugins/FfmpegDecoderPlugin.cxx mpd.new/src/decoder/plugins/FfmpegDecoderPlugin.cxx
--- mpd.orig/src/decoder/plugins/FfmpegDecoderPlugin.cxx	2022-09-03 21:56:06.665442916 +0800
+++ mpd.new/src/decoder/plugins/FfmpegDecoderPlugin.cxx	2022-09-03 21:44:59.871730693 +0800
@@ -637,6 +637,13 @@
 						  AV_TIME_BASE_Q));
 
 	const auto &codec_params = *stream.codecpar;
+	
+#if LIBAVUTIL_VERSION_INT >= AV_VERSION_INT(57, 25, 100)
+	const unsigned channels = codec_params.ch_layout.nb_channels;
+#else
+	const unsigned channels = codec_params.channels;
+#endif
+	
 	try {
 		handler.OnAudioFormat(CheckAudioFormat(codec_params.sample_rate,
 						       ffmpeg_sample_format(AVSampleFormat(codec_params.format)),
diff '--exclude=.git' '--exclude=.github' --unified --recursive --text mpd.orig/src/decoder/plugins/FfmpegIo.cxx mpd.new/src/decoder/plugins/FfmpegIo.cxx
--- mpd.orig/src/decoder/plugins/FfmpegIo.cxx	2022-09-03 21:56:06.665442916 +0800
+++ mpd.new/src/decoder/plugins/FfmpegIo.cxx	2022-09-03 21:44:26.151706459 +0800
@@ -21,10 +21,14 @@
 #define __STDC_CONSTANT_MACROS
 
 #include "FfmpegIo.hxx"
-#include "libavutil/mem.h"
+/* #include "libavutil/mem.h" */
 #include "../DecoderAPI.hxx"
 #include "input/InputStream.hxx"
 
+extern "C" {
+#include <libavutil/mem.h>
+}
+
 AvioStream::~AvioStream()
 {
 	if (io != nullptr) {
diff '--exclude=.git' '--exclude=.github' --unified --recursive --text mpd.orig/src/Log.hxx mpd.new/src/Log.hxx
--- mpd.orig/src/Log.hxx	2022-09-03 21:56:06.648776241 +0800
+++ mpd.new/src/Log.hxx	2022-09-03 21:43:52.231681297 +0800
@@ -45,7 +45,10 @@
 LogFmt(LogLevel level, const Domain &domain,
        const S &format_str, Args&&... args) noexcept
 {
-#if FMT_VERSION >= 70000
+#if FMT_VERSION >= 90000
+	return LogVFmt(level, domain, format_str,
+		       fmt::make_format_args(args...));
+#elif FMT_VERSION >= 70000
 	return LogVFmt(level, domain, fmt::to_string_view(format_str),
 		       fmt::make_args_checked<Args...>(format_str,
 						       args...));
